import { Button } from "@/components/ui/button";
import { Check, Luggage, User } from "lucide-react";
import { Dialog, DialogContent, DialogTrigger } from "@/components/ui/dialog";
import React, { useEffect, useRef, useState } from "react";
import { Link, useParams } from "react-router-dom";
import {
    Select,
    SelectContent,
    SelectGroup,
    SelectItem,
    SelectLabel,
    SelectTrigger,
    SelectValue,
} from "@/components/ui/select";
import { cn } from "@/lib/utils";
import { Calendar } from "@/components/ui/calendar";
import {
    Popover,
    PopoverContent,
    PopoverTrigger,
} from "@/components/ui/popover";
import { format } from "date-fns";
import { Calendar as CalendarIcon } from "lucide-react";
import { getCurrentUser } from "@/actions/api";
import { useCookies } from "react-cookie";
import Loading from "@/components/loading";
import { useToast } from "@/components/ui/use-toast";
export default function details() {
    const [cookies, setCookie] = useCookies(["token"]);
    console.log(cookies?.token);
    const { id } = useParams();
    const [vehicle, setVehicle] = useState(null);
    const [isLogged, setIslogged] = useState(null);
    // const [userData,setUserdate]= useState()
    const [vehicleType, setVehicleType] = useState(null);
    const [pickUpLocationSelected, setPickUpLocationSelected] = useState(null);
    const [dropOffLocationSelected, setDropOffLocationSelected] =
        useState(null);
    const [pickUpDate, setPickUpDate] = useState(null);
    const [returnDate, setReturnDate] = useState(null);
    const { toast } = useToast();
    const auth = async () => {
        const response = await getCurrentUser(cookies?.token);
        // console.log(response);
        if (response?.error == null) {
            setIslogged(true);
            // console.log(response?.error);
        }
    };
    useEffect(() => {
        fetch(`http://127.0.0.1:8000/api/vehicles/${id}`)
            .then((res) => res.json())
            .then((res) => {
                if (res?.data) {
                    setVehicle({
                        ...res?.data,
                        photoURL: `http://127.0.0.1:8000${res?.data?.photo}`,
                    });
                }
            })
            .catch((error) => {
                console.error(
                    "There was an error fetching the vehicle data!",
                    error
                );
            });
            auth();
    }, []);
    const handleBooking = async () => {
        fetch(`http://127.0.0.1:8000/api/rentalBooks`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json",
                "Authorization": `Bearer ${cookies?.token}`,
            },
            body: JSON.stringify({
                vehicleId: id,
                userId: 1,
                initialNotes: "everything is good",
                price: vehicle?.pricePerDay,
                // pickUpLocation: pickUpLocationSelected,
                // dropOffLocation: dropOffLocationSelected,
                startDate: format(pickUpDate, "yyyy-MM-dd"),
                endDate: format(returnDate, "yyyy-MM-dd"),
            }),
        })
            .then((res) => res.json())
            .then((res) => {
                toast({
                    description: "car is rented !",
                    // variant: "destructive",
                });
            })
            .catch((error) => {
                console.log(error);
            });
        // console.log({
        //     vehicleType,
        //     pickUpLocationSelected,
        //     dropOffLocationSelected,
        //     pickUpDate,
        //     returnDate,
        // });
    };
    console.log(vehicle);
    const carTypes = [
        "all",
        "luxury cars",
        "sport cars",
        "SUVs",
        "convertible",
    ];
    const pickUpLocation = ["safi", "casa", "fas"];
    const dropOffLocation = ["safi", "casa", "fas"];

    return (
        <div>
            <header
                className=" relative w-full h-[70vh] bg-cover bg-center flex flex-col justify-center gap-4"
                style={{
                    backgroundImage: `url(${vehicle?.photoURL})`,
                }}
            >
                <div className=" inset-0 bg-black opacity-30 w-full h-full z-10  absolute" />
                <p className="text-[#f5B754] font-thin z-20 ml-[10%]">
                    LUXURY CARS
                </p>
                <h1 className="text-3xl md:text-4xl font-bold ml-[10%] z-20">
                    {vehicle?.make} {vehicle?.model}
                </h1>
            </header>
            <div className="flex flex-col lg:flex-row">
                <ul className="flex flex-col gap-2 px-5 my-6 lg:w-[50%]">
                    <li className=" text-lg my-3">General Information</li>
                    <li className="text-[#9b9b9b] font-title">
                        Lorem pretium fermentum quam, sit amet cursus ante
                        sollicitudin velen morbi consesua the miss sustion
                        consation porttitor orci sit amet iaculis nisan. Lorem
                        pretium fermentum quam sit amet cursus ante sollicitudin
                        velen fermen morbinetion consesua the risus consequation
                        the porttiton.
                    </li>

                    <li className="flex items-center gap-3 mt-7">
                        <span className="w-[40px] h-[40px] sm:w-[50px] sm:h-[50px] flex justify-center items-center rounded-full text-[#f5B754] bg-[#222222] ">
                            <Check />
                        </span>
                        <p>24/7 Roadside Assistance</p>
                    </li>
                    <li className="flex items-center gap-3">
                        <span className="w-[40px] h-[40px] sm:w-[50px] sm:h-[50px] flex justify-center items-center rounded-full text-[#f5B754] bg-[#222222] ">
                            <Check />
                        </span>
                        <p>Free Cancellation & Return</p>
                    </li>
                    <li className="flex items-center gap-3">
                        <span className="w-[40px] h-[40px] sm:w-[50px] sm:h-[50px] flex justify-center items-center rounded-full text-[#f5B754] bg-[#222222] ">
                            <Check />
                        </span>
                        <p>Rent Now Pay When You Arrive</p>
                    </li>
                </ul>
                <div className=" m-auto w-[90%] md:w-[360px] lg:mt-[-113px] z-30 bg-[#222222] rounded-3xl">
                    <ul>
                        <li className=" bg-[#f5B754] text-black rounded-t-3xl text-center p-9">
                            <span className=" text-4xl font-bold">
                                ${vehicle?.pricePerDay}
                            </span>
                            / rent per day
                        </li>
                        <li className="flex justify-between items-center py-3 px-8  mt-9 ">
                            <div className="flex items-center gap-4 text-[#9b9b9b]">
                                <span className=" flex justify-center items-center w-[40px] h-[40px] bg-[#484747] rounded-full">
                                    <svg
                                        xmlns="http://www.w3.org/2000/svg"
                                        xmlnsXlink="http://www.w3.org/1999/xlink"
                                        viewBox="0 0 90.4 122.88"
                                        className="w-4 text-[#f5B754]"
                                        xmlSpace="preserve"
                                    >
                                        <g>
                                            <path
                                                fill="#f5B754"
                                                d="M58.73,0H31.28c-0.72,0-1.42,0.14-2.07,0.42c-0.66,0.27-1.26,0.68-1.76,1.17l-0.02,0.02 c-0.49,0.5-0.89,1.09-1.16,1.74c-0.26,0.63-0.42,1.33-0.42,2.07v12.01c0,1.48,0.61,2.84,1.59,3.82l0.02,0.03 c0.97,0.97,2.33,1.57,3.8,1.57h27.45c1.48,0,2.84-0.61,3.82-1.59l0.02-0.02c0.97-0.98,1.57-2.33,1.57-3.8V5.41 c0-0.72-0.14-1.43-0.42-2.07c-0.27-0.66-0.68-1.26-1.19-1.76c-0.5-0.5-1.1-0.9-1.76-1.17C60.16,0.14,59.47,0,58.73,0L58.73,0 L58.73,0z M76.84,88.72V43.91c0-2.03-0.41-3.96-1.14-5.73c-0.76-1.84-1.88-3.49-3.27-4.88c-1.39-1.39-3.04-2.51-4.88-3.27 c-1.77-0.73-3.7-1.14-5.73-1.14H27.54c-2.03,0-3.96,0.41-5.73,1.14c-1.84,0.77-3.49,1.88-4.88,3.27c-1.39,1.39-2.51,3.04-3.27,4.88 c-0.73,1.77-1.14,3.7-1.14,5.73v44.67c1.37,1.16,2.73,2.68,4.01,4.59c1.17,1.75,2.27,3.83,3.27,6.24 c3.72-1.88,7.57-3.27,11.53-4.19c4.08-0.95,8.28-1.4,12.61-1.38c4.31,0.02,8.73,0.53,13.26,1.49c4.41,0.94,8.93,2.31,13.54,4.11 c0.47-2.17,1.23-4.15,2.21-5.87C74.01,91.63,75.36,90,76.84,88.72L76.84,88.72L76.84,88.72z M25.48,50.62l-0.04-0.06 c-0.33-0.53-0.44-1.15-0.31-1.72c0.12-0.57,0.45-1.11,0.97-1.46l0.06-0.04c0.53-0.33,1.15-0.44,1.72-0.31 c0.59,0.13,1.13,0.47,1.48,1c1.68,2.56,3.21,5.24,4.55,8.05c1.34,2.82,2.5,5.78,3.45,8.91c0.95,3.12,1.68,6.4,2.19,9.85 c0.5,3.45,0.77,7.08,0.78,10.92c0,0.65-0.26,1.23-0.69,1.65c-0.42,0.43-1.02,0.69-1.65,0.69c-0.65,0-1.23-0.26-1.65-0.69 c-0.43-0.43-0.69-1.01-0.69-1.66c-0.01-3.59-0.26-6.98-0.73-10.22c-0.47-3.23-1.16-6.28-2.04-9.19c-0.88-2.9-1.96-5.65-3.2-8.27 C28.45,55.46,27.04,52.98,25.48,50.62L25.48,50.62L25.48,50.62z M60.74,48.02c0.36-0.54,0.9-0.89,1.49-1 c0.59-0.13,1.21-0.02,1.75,0.32l0.03,0.02c0.53,0.36,0.88,0.89,0.99,1.47c0.11,0.59,0.02,1.21-0.32,1.75l-0.02,0.02 c-1.56,2.36-2.97,4.85-4.21,7.48c-1.24,2.62-2.32,5.37-3.2,8.27c-0.88,2.91-1.57,5.96-2.04,9.19c-0.47,3.23-0.72,6.63-0.74,10.22 c0,0.65-0.26,1.23-0.69,1.65c-0.43,0.43-1.01,0.69-1.66,0.69c-0.65,0-1.23-0.26-1.66-0.69l-0.02-0.02c-0.41-0.42-0.67-1-0.67-1.64 c0.01-3.83,0.28-7.46,0.79-10.92c0.5-3.45,1.24-6.73,2.18-9.85c0.95-3.13,2.1-6.1,3.44-8.91C57.54,53.25,59.06,50.58,60.74,48.02 L60.74,48.02L60.74,48.02z M9.34,93.15c-0.2-0.07-0.38-0.18-0.54-0.29c-0.17-0.13-0.32-0.27-0.46-0.43 c-0.36-0.22-0.7-0.41-1.05-0.55c-0.36-0.16-0.71-0.27-1.06-0.36c-0.41-0.09-0.8-0.13-1.18-0.11c-0.38,0.01-0.74,0.08-1.09,0.2 c-0.38,0.13-0.73,0.32-1.08,0.59c-0.34,0.26-0.66,0.57-0.96,0.96C0.26,95.3-0.15,98,0.04,100.84c0.19,2.89,1.01,5.94,1.74,8.72 l0.03,0.14c0.19,0.73,0.38,1.43,0.5,1.91l1.82,7.2c0.26,1.06,0.47,2.03,0.64,2.82l0.01,0.03c0.1,0.53,0.17,0.91,0.21,1.15 c0,0.03,0,0.04-0.01,0.06c0.02-0.01,0.06-0.02,0.11-0.02c0.31-0.02,0.85-0.06,1.67-0.07l1.48-0.02h74.37l0.08,0.01h0.55 c0.9,0,1.47,0.03,1.81,0.05c0.05,0,0.09,0.01,0.14,0.03v-0.04c0.04-0.2,0.1-0.52,0.21-0.97l0.01-0.02 c0.18-0.74,0.41-1.67,0.72-2.71l2.18-7.3c1.4-4.67,2.03-8.48,2.07-11.51c0.05-3.4-0.61-5.8-1.7-7.34 c-0.38-0.52-0.81-0.93-1.28-1.23c-0.49-0.31-1.01-0.51-1.57-0.6c-0.59-0.09-1.23-0.07-1.87,0.06c-0.66,0.14-1.34,0.38-2.02,0.73 c-1.81,0.93-3.52,2.57-4.81,4.79c-1.16,1.99-1.96,4.44-2.17,7.28l-0.01,0.06c-0.01,0.1-0.03,0.21-0.05,0.31v0.01 c-0.03,0.12-0.06,0.23-0.11,0.34c-0.25,0.6-0.72,1.03-1.28,1.26c-0.55,0.23-1.19,0.24-1.79-0.01c-4.9-2.07-9.68-3.65-14.32-4.72 c-4.63-1.07-9.13-1.62-13.48-1.65c-4.31-0.02-8.49,0.47-12.52,1.51c-4.04,1.03-7.94,2.61-11.69,4.74l-0.19,0.09 c-0.06,0.03-0.14,0.06-0.2,0.08l-0.02,0.01c-0.61,0.2-1.23,0.15-1.77-0.11c-0.54-0.26-0.98-0.73-1.19-1.34 c-0.96-2.76-2.04-5.05-3.19-6.92C11.92,95.71,10.63,94.2,9.34,93.15L9.34,93.15L9.34,93.15z"
                                            />
                                        </g>
                                    </svg>
                                </span>
                                <span>Doors</span>
                            </div>
                            <span>4</span>
                        </li>
                        <li className="flex justify-between items-center py-3 px-8 ">
                            <div className="flex items-center gap-4 text-[#9b9b9b]">
                                <span className=" flex justify-center items-center w-[40px] h-[40px] bg-[#484747] rounded-full">
                                    <svg
                                        className="w-5 text-[#f5B754]"
                                        viewBox="0 0 50 50"
                                        xmlns="http://www.w3.org/2000/svg"
                                        xmlnsXlink="http://www.w3.org/1999/xlink"
                                    >
                                        <path
                                            fill="#f5B754"
                                            d="M25 8C18.402344 8 15.996094 8.871094 15.535156 9.070313C13.984375 9.59375 11.679688 10.394531 10.683594 12.328125C10.003906 13.644531 5.570313 25.476563 5.0625 26.820313L5 26.988281L5 39C5 40.652344 6.347656 42 8 42L12 42C13.652344 42 15 40.652344 15 39L15 38L35 38L35 39C35 40.652344 36.347656 42 38 42L42 42C43.652344 42 45 40.652344 45 39L45 26.988281L44.933594 26.8125C44.828125 26.535156 43.40625 22.820313 41.996094 19.191406C41.980469 19.160156 41.972656 19.132813 41.960938 19.097656C40.789063 16.085938 39.640625 13.148438 39.273438 12.308594C38.433594 10.40625 36.128906 9.539063 34.4375 9.054688C33.917969 8.839844 31.480469 8 25 8 Z M 25 10C31.550781 10 33.660156 10.898438 33.671875 10.902344L33.828125 10.964844C34.582031 11.175781 36.875 11.828125 37.441406 13.113281C37.777344 13.878906 38.820313 16.535156 39.917969 19.363281L39.910156 19.363281L39.988281 19.558594C40.007813 19.597656 40.023438 19.644531 40.042969 19.6875C40.070313 19.757813 40.097656 19.832031 40.125 19.902344C40.371094 20.542969 40.652344 21.496094 40.265625 22.078125C39.902344 22.613281 38.90625 22.914063 37.472656 22.972656C36.746094 21.257813 35.3125 19.917969 33.53125 19.332031C34.414063 18.695313 35 17.664063 35 16.5C35 14.578125 33.421875 13 31.5 13C29.578125 13 28 14.578125 28 16.5C28 17.664063 28.585938 18.699219 29.472656 19.335938C27.679688 19.925781 26.226563 21.269531 25.503906 23L24.484375 23C23.757813 21.269531 22.320313 19.921875 20.53125 19.332031C21.414063 18.695313 22 17.664063 22 16.5C22 14.578125 20.421875 13 18.5 13C16.578125 13 15 14.578125 15 16.5C15 17.667969 15.589844 18.699219 16.476563 19.339844C14.695313 19.925781 13.253906 21.253906 12.527344 22.96875C11.085938 22.898438 10.0625 22.539063 9.703125 22.003906C9.230469 21.308594 9.734375 20.078125 9.976563 19.484375L10.03125 19.34375L10.050781 19.292969C11.21875 16.257813 12.210938 13.730469 12.460938 13.246094C13.097656 12.011719 14.976563 11.371094 16.222656 10.949219L16.316406 10.90625C16.335938 10.898438 18.449219 10 25 10 Z M 18.5 15C19.339844 15 20 15.660156 20 16.5C20 17.339844 19.339844 18 18.5 18C17.660156 18 17 17.339844 17 16.5C17 15.660156 17.660156 15 18.5 15 Z M 31.5 15C32.339844 15 33 15.660156 33 16.5C33 17.339844 32.339844 18 31.5 18C30.660156 18 30 17.339844 30 16.5C30 15.660156 30.660156 15 31.5 15 Z M 5.101563 19C2.078125 19 1 20.855469 1 22.589844C1 23.433594 1.375 24.792969 3.625 24.96875C4.25 23.296875 5.066406 21.128906 5.882813 19 Z M 44.0625 19C44.96875 21.339844 45.855469 23.640625 46.367188 24.96875C48.621094 24.796875 49 23.433594 49 22.589844C49 20.855469 47.921875 19 44.902344 19 Z M 18.5 21C20.066406 21 21.433594 21.796875 22.238281 23L14.769531 23C15.578125 21.796875 16.933594 21 18.5 21 Z M 31.5 21C33.066406 21 34.433594 21.796875 35.238281 23L27.765625 23C28.570313 21.796875 29.933594 21 31.5 21 Z M 11 27L15 27C16.65625 27 18 28.34375 18 30C18 31.65625 16.65625 33 15 33C13.324219 33 12.8125 32.566406 11.078125 31.582031C9.917969 30.925781 9 30.308594 9 29C9 27.894531 9.894531 27 11 27 Z M 35 27L39 27C40.105469 27 41 27.894531 41 29C41 30.308594 40.082031 30.925781 38.921875 31.582031C37.1875 32.566406 36.675781 33 35 33C33.34375 33 32 31.65625 32 30C32 28.34375 33.34375 27 35 27Z"
                                        />
                                    </svg>
                                </span>
                                <span>Doors</span>
                            </div>
                            <span>4</span>
                        </li>
                        <li className="flex justify-between items-center py-3 px-8 ">
                            <div className="flex items-center gap-4 text-[#9b9b9b]">
                                <span className=" flex justify-center items-center w-[40px] h-[40px] bg-[#484747] rounded-full">
                                    <svg
                                        xmlns="http://www.w3.org/2000/svg"
                                        viewBox="0 0 122.88 122.88"
                                        className="w-5"
                                    >
                                        <path
                                            fill="#f5B754"
                                            d="M61.44,0A61.46,61.46,0,1,1,18,18,61.23,61.23,0,0,1,61.44,0Zm4.07,82.09a6.67,6.67,0,1,1-8.14,0V68.62H42.31V82.09a6.67,6.67,0,1,1-8.14,0V46.17a6.67,6.67,0,1,1,8.14,0V60.48H57.37V46.17a6.67,6.67,0,1,1,8.14,0V60.48H80.57V46.17a6.67,6.67,0,1,1,8.14,0V64a4.41,4.41,0,0,1,0,.52,4.07,4.07,0,0,1-4.07,4.07H65.51V82.09Zm33-57.76a52.46,52.46,0,1,0,15.38,37.11A52.29,52.29,0,0,0,98.55,24.33Z"
                                        />
                                    </svg>
                                </span>
                                <span>Transmission</span>
                            </div>
                            <span>Auto</span>
                        </li>
                        <li className="flex justify-between items-center py-3 px-8 ">
                            <div className="flex items-center gap-4 text-[#9b9b9b]">
                                <span className=" flex justify-center items-center w-[40px] h-[40px] bg-[#484747] rounded-full">
                                    <Luggage className="w-5 text-[#f5B754]" />
                                </span>
                                <span>Luggage</span>
                            </div>
                            <span>2 Bags</span>
                        </li>
                        <li className="flex justify-between items-center py-3 px-8 ">
                            <div className="flex items-center gap-4 text-[#9b9b9b]">
                                <span className=" flex justify-center items-center w-[40px] h-[40px] bg-[#484747] rounded-full">
                                    <svg
                                        className="w-5 text-[#f5B754]"
                                        xmlns="http://www.w3.org/2000/svg"
                                        xmlnsXlink="http://www.w3.org/1999/xlink"
                                        viewBox="0 0 380.65 380.65"
                                        xmlSpace="preserve"
                                    >
                                        <path
                                            fill="#f5B754"
                                            d="M138.13,355.988c-1.338,3.641-4.783,5.897-8.448,5.897c-1.031,0-2.08-0.179-3.104-0.555
	c-11.646-4.281-22.834-9.853-33.255-16.561c-4.18-2.69-5.387-8.259-2.697-12.439c2.689-4.181,8.259-5.387,12.439-2.697
	c9.314,5.995,19.314,10.975,29.724,14.802C137.454,346.151,139.846,351.323,138.13,355.988z M25.157,230.493
	c4.898-0.847,8.182-5.505,7.334-10.402c-1.892-10.936-2.58-22.086-2.044-33.141c0.241-4.965-3.589-9.185-8.554-9.425
	c-4.972-0.246-9.184,3.588-9.425,8.554c-0.6,12.371,0.169,24.846,2.286,37.08c0.757,4.379,4.56,7.467,8.857,7.467
	C24.121,230.626,24.638,230.583,25.157,230.493z M245.006,76.911c0.789,0.325,1.572,0.659,2.349,0.999
	c1.176,0.515,2.4,0.759,3.606,0.759c3.466,0,6.769-2.014,8.249-5.391c1.995-4.553-0.08-9.861-4.632-11.855
	c-0.902-0.395-1.81-0.783-2.726-1.159c-4.597-1.891-9.856,0.303-11.747,4.901C238.215,69.761,240.409,75.02,245.006,76.911z
	 M247.86,46.369c10.414,3.829,20.413,8.809,29.722,14.801c1.507,0.97,3.194,1.434,4.863,1.434c2.958,0,5.855-1.457,7.576-4.129
	c2.69-4.18,1.484-9.749-2.695-12.439c-10.416-6.706-21.604-12.277-33.253-16.561c-4.666-1.713-9.837,0.676-11.553,5.341
	C240.804,39.48,243.195,44.653,247.86,46.369z M328,173.396c-4.926,0.665-8.38,5.197-7.716,10.123
	c0.114,0.845,0.214,1.691,0.309,2.535c0.515,4.599,4.411,7.999,8.933,7.999c0.334,0,0.673-0.019,1.014-0.057
	c4.939-0.553,8.495-5.006,7.941-9.946c-0.109-0.978-0.226-1.957-0.358-2.936C337.457,176.187,332.928,172.74,328,173.396z
	 M51.437,217.491c0.402,0,0.809-0.027,1.218-0.083c4.926-0.667,8.378-5.2,7.711-10.125c-0.113-0.838-0.213-1.677-0.305-2.513
	c-0.543-4.941-4.99-8.509-9.93-7.963c-4.941,0.543-8.506,4.989-7.963,9.93c0.108,0.985,0.227,1.973,0.361,2.96
	C43.141,214.213,47.002,217.491,51.437,217.491z M365.896,167.645c-0.847-4.898-5.503-8.185-10.402-7.334
	c-4.898,0.847-8.182,5.505-7.334,10.402c1.891,10.929,2.579,22.079,2.044,33.142c-0.24,4.965,3.591,9.184,8.556,9.424
	c0.148,0.007,0.295,0.01,0.441,0.01c4.771,0,8.75-3.749,8.982-8.566C368.781,192.346,368.011,179.871,365.896,167.645z
	 M363.533,255.058c2.688,9.017,1.54,18.849-3.152,26.975l-3.991,6.911c-4.692,8.127-12.633,14.039-21.787,16.219
	c-8.68,2.066-17.447,0.594-24.687-4.145l-84.313-55.19l5.64,100.61c0.484,8.642-2.625,16.972-8.755,23.455
	c-6.465,6.837-15.554,10.758-24.938,10.758h-7.98c-9.384,0-18.475-3.921-24.939-10.759c-6.13-6.483-9.24-14.812-8.755-23.453
	l5.638-100.609l-84.309,55.188c-7.243,4.74-16.013,6.212-24.691,4.145c-9.153-2.181-17.094-8.092-21.786-16.218l-3.99-6.911
	c-4.691-8.126-5.84-17.959-3.152-26.976c2.549-8.55,8.207-15.408,15.932-19.31l89.95-45.421l-89.949-45.421
	c-7.725-3.901-13.383-10.759-15.932-19.309c-2.689-9.018-1.54-18.85,3.151-26.977l3.991-6.911
	c4.691-8.126,12.632-14.038,21.786-16.218c8.677-2.067,17.448-0.596,24.69,4.145l84.31,55.188l-5.638-100.609
	c-0.484-8.641,2.625-16.97,8.755-23.453C171.096,3.921,180.187,0,189.571,0h7.98c9.383,0,18.473,3.921,24.938,10.758
	c6.13,6.483,9.239,14.813,8.755,23.455l-5.64,100.61l84.313-55.189c7.24-4.74,16.007-6.212,24.687-4.145
	c9.154,2.18,17.095,8.092,21.788,16.219l3.99,6.911c4.691,8.126,5.84,17.959,3.151,26.977c-2.55,8.551-8.208,15.408-15.933,19.309
	l-89.95,45.421l89.95,45.421C355.326,239.648,360.984,246.507,363.533,255.058z M160.128,225.223
	c-6.645-6.334-11.329-14.431-13.5-23.398l-98.996,49.989c-3.262,1.648-5.676,4.625-6.796,8.385
	c-1.281,4.296-0.737,8.974,1.491,12.833l3.99,6.911c2.229,3.86,6.008,6.669,10.369,7.708c3.814,0.908,7.604,0.307,10.662-1.695
	L160.128,225.223z M160.128,155.427L67.347,94.694c-2.128-1.393-4.609-2.108-7.207-2.108c-1.136,0-2.294,0.137-3.455,0.413
	c-4.361,1.039-8.14,3.848-10.368,7.708l-3.99,6.911c-2.229,3.86-2.772,8.537-1.491,12.833c1.121,3.76,3.535,6.737,6.796,8.385
	l98.995,49.989C148.799,169.859,153.484,161.761,160.128,155.427z M173.848,33.206l6.206,110.741
	c3.938-1.145,8.026-1.786,12.184-1.898l0.003,0c0.025,0,0.048,0.002,0.077-0.002c0.015,0,0.031-0.001,0.046-0.001
	c0.038-0.001,0.078-0.002,0.119-0.003c0.018,0,0.039-0.001,0.059-0.001c0.021-0.001,0.037,0,0.056-0.001
	c0.017-0.001,0.036,0,0.054-0.001c0.02,0,0.041-0.002,0.062-0.001c0.017,0,0.036,0,0.054-0.001c0.018,0,0.042,0,0.061-0.001
	c0.016-0.001,0.034,0,0.052,0c0.019,0,0.042-0.001,0.063-0.001c0.015,0,0.034,0,0.05,0c0.019,0,0.042,0,0.063-0.001
	c0.016-0.002,0.031,0,0.05,0c0.021,0,0.042,0,0.062,0c0.028,0.004,0.036,0,0.052,0c0.017-0.001,0.038,0,0.055,0
	c0.02,0.001,0.039,0,0.059,0c0.019,0,0.038,0,0.053,0c0.021-0.001,0.04,0,0.061,0c0.019,0,0.034,0,0.051,0
	c0.02,0.001,0.042,0,0.063,0c0.021,0,0.041,0.001,0.063,0c0.017,0,0.036,0.001,0.051,0c0.021,0,0.04-0.001,0.06,0
	c0.016,0,0.034-0.001,0.053,0c0.019,0,0.041,0.001,0.059,0s0.036,0,0.055,0c0.039,0,0.076,0.001,0.113,0.001
	c0.017,0,0.042,0.003,0.05,0c0.02,0,0.042,0,0.063,0.001c0.018,0,0.027,0.004,0.05,0c0.02,0,0.041,0.002,0.061,0.001
	c0.018,0,0.035,0,0.053,0c0.02,0,0.04,0.001,0.056,0.001c0.018,0,0.039,0,0.057,0.001c0.016,0,0.022-0.01,0.052,0.001
	c0.021,0,0.042,0,0.062,0.001c0.018,0.001,0.037,0.003,0.051,0.001c0.021,0,0.04,0,0.061,0.001c0.018,0,0.036,0.002,0.053,0.001
	c0.021,0,0.041,0.001,0.059,0.001c0.018,0.001,0.037,0.002,0.054,0.001c0.019,0,0.04-0.001,0.059,0.001
	c0.019,0,0.039,0.002,0.058,0.001c0.015,0,0.029,0,0.048,0.001c0.022,0,0.046,0.002,0.067,0.002c0.016,0,0.036,0.001,0.052,0.001
	c0.022,0,0.042,0.002,0.063,0.002c0.017,0.001,0.033,0.001,0.049,0.002c0.027,0.001,0.049,0.001,0.071,0.002
	c0.004,0,0.006,0,0.011,0c4.022,0.141,7.977,0.777,11.79,1.886l6.208-110.741c0.205-3.65-1.167-7.23-3.862-10.081
	C206.33,19.868,202.008,18,197.551,18h-7.98c-4.458,0-8.78,1.868-11.86,5.126C175.015,25.977,173.643,29.556,173.848,33.206z
	 M213.272,347.445l-6.208-110.741c-3.851,1.12-7.846,1.758-11.908,1.89h-0.003c-0.04,0.001-0.075-0.006-0.119,0.004
	c-0.015,0-0.032,0-0.046,0.001c-0.024,0-0.043,0.002-0.07,0.002c-0.016,0.001-0.035,0.001-0.05,0.001
	c-0.021,0.001-0.046,0.001-0.067,0.002c-0.017,0-0.034,0-0.05,0.001c-0.021,0.001-0.044,0.001-0.064,0.001
	c-0.017,0.001-0.034,0-0.051,0.001c-0.021,0-0.043,0-0.064,0.001c-0.015,0-0.035,0-0.05,0.001c-0.018,0.001-0.037,0-0.057,0.001
	c-0.018,0-0.038,0.001-0.058,0.001c-0.019,0-0.038,0-0.055,0.001c-0.021-0.002-0.038,0-0.059,0.001c-0.018,0-0.035,0-0.052,0
	c-0.02,0-0.042,0-0.062,0.001c-0.016,0.001-0.034,0-0.05,0c-0.018,0-0.042,0-0.063,0.001c-0.019,0-0.032,0-0.05,0
	c-0.019,0-0.042,0-0.062,0c-0.012,0.006-0.035,0-0.052,0c-0.02,0.001-0.039,0-0.055,0c-0.018,0-0.039,0-0.059,0
	c-0.017,0-0.037,0-0.053,0c-0.023,0.003-0.04,0.001-0.061,0c-0.016,0-0.034,0-0.051,0c-0.022,0-0.042,0-0.063,0
	c-0.021,0-0.043,0-0.063,0c-0.017,0-0.033,0-0.051,0c-0.021,0-0.038-0.001-0.061,0c-0.016,0-0.036-0.002-0.053,0
	c-0.02,0-0.042-0.002-0.059,0c-0.016,0-0.035,0.002-0.055,0c-0.016,0-0.008,0.005-0.052,0c-0.02-0.001-0.043,0-0.062,0
	c-0.017-0.001-0.034-0.001-0.05,0c-0.021-0.001-0.043-0.002-0.064-0.001c-0.016,0-0.033,0-0.049,0c-0.021,0-0.041-0.001-0.063-0.001
	c-0.017,0-0.036-0.001-0.052,0c-0.02-0.001-0.043-0.001-0.062-0.001c-0.018,0-0.035-0.001-0.053-0.001c-0.021,0-0.04,0-0.063-0.001
	c-0.02,0-0.035-0.001-0.053-0.001c-0.021-0.001-0.042-0.001-0.062-0.001c-0.019,0-0.036-0.001-0.054-0.001
	c-0.04-0.002-0.079-0.002-0.118-0.003c-0.015,0-0.029-0.001-0.045-0.001c-0.028-0.004-0.051-0.001-0.077-0.002l-0.003,0
	c-4.157-0.112-8.246-0.753-12.184-1.898l-6.206,110.741c-0.205,3.649,1.167,7.229,3.863,10.08c3.08,3.258,7.403,5.126,11.86,5.126
	h7.98c4.457,0,8.779-1.868,11.858-5.125C212.104,354.675,213.476,351.095,213.272,347.445z M223.854,190.287
	c-0.001-0.599-0.022-1.228-0.063-1.869c-0.005-0.078-0.009-0.154-0.012-0.231c-1.09-15.566-13.993-27.927-29.778-28.153
	c-0.042,0.005-0.064,0-0.097-0.001c-0.017,0.001-0.03,0-0.046,0c-0.029-0.001-0.064,0-0.097-0.001c-0.017,0-0.032,0-0.048,0
	c-0.014-0.001-0.034,0-0.051,0c-0.016,0-0.029,0-0.045,0c-0.016-0.001-0.038,0-0.056,0c-0.018,0-0.038,0-0.056,0
	c-0.016,0-0.031,0.001-0.045,0c-0.016,0-0.033,0-0.051,0c-0.015,0-0.033,0-0.048,0c-0.032,0.001-0.062,0.009-0.096,0.001
	c-0.016,0-0.034-0.003-0.047,0c-15.833,0.176-28.788,12.557-29.881,28.155c-0.002,0.063-0.005,0.125-0.009,0.188
	c-0.043,0.743-0.064,1.352-0.065,1.913c0,0.012,0,0.024,0,0.036s0,0.024,0,0.036c0.001,0.562,0.022,1.171,0.065,1.914
	c0.004,0.063,0.007,0.125,0.009,0.188c1.093,15.599,14.048,27.979,29.881,28.156c0.004,0.004,0.03,0,0.047,0
	c0.027-0.009,0.063,0,0.096,0.001c0.016,0,0.033,0,0.048,0c0.019,0.002,0.035,0,0.051,0c0.015,0,0.03,0,0.045,0
	c0.004,0,0.008,0,0.012,0c0.029,0,0.059,0,0.087,0c0.019,0,0.031,0,0.047,0c0.018,0.001,0.037,0,0.055,0c0.016,0.002,0.03,0,0.044,0
	c0.039,0.001,0.069,0,0.102-0.001c0.015,0,0.033,0,0.049,0c0.001,0,0.002,0,0.003,0c15.83-0.176,28.782-12.557,29.875-28.156
	c0.003-0.076,0.007-0.153,0.012-0.229c0.041-0.641,0.062-1.27,0.063-1.87c0-0.012,0-0.025,0-0.038S223.854,190.299,223.854,190.287z
	 M226.991,155.428c6.644,6.334,11.327,14.43,13.498,23.398l98.997-49.99c3.262-1.647,5.676-4.625,6.797-8.385
	c1.281-4.296,0.738-8.974-1.491-12.833l-3.99-6.911c-2.229-3.86-6.008-6.669-10.369-7.708c-3.816-0.907-7.6-0.307-10.659,1.694
	L226.991,155.428z M346.284,260.2c-1.121-3.76-3.536-6.739-6.799-8.387l-98.997-49.989c-2.17,8.968-6.853,17.063-13.497,23.398
	l92.784,60.734c3.057,2.001,6.841,2.604,10.659,1.695c4.361-1.039,8.14-3.848,10.369-7.708l3.99-6.911
	C347.021,269.173,347.565,264.496,346.284,260.2z M135.642,313.894c-0.788-0.324-1.568-0.658-2.344-0.998
	c-4.551-1.996-9.86,0.075-11.857,4.627c-1.997,4.552,0.075,9.861,4.627,11.857c0.903,0.396,1.812,0.784,2.729,1.161
	c1.12,0.46,2.279,0.679,3.419,0.679c3.54,0,6.897-2.103,8.327-5.58C142.433,321.043,140.24,315.784,135.642,313.894z"
                                        />
                                    </svg>
                                </span>
                                <span> Air Condition</span>
                            </div>
                            <span>Yes</span>
                        </li>
                        <li className="flex justify-between items-center py-3 px-8 mb-9 ">
                            <div className="flex items-center gap-4 text-[#9b9b9b]">
                                <span className=" flex justify-center items-center w-[40px] h-[40px] bg-[#484747] rounded-full">
                                    <User className="w-5 text-[#f5B754]" />
                                </span>
                                <span>Age</span>
                            </div>
                            <span>25</span>
                        </li>

                        <li className="relative flex flex-row gap-1 justify-center">
                            <Dialog>
                                <DialogTrigger asChild>
                                    <Button
                                        size="lg"
                                        className="bg-[#f5B754] min-w-[110px] my-2 hover:bg-white text-black  rounded-none rounded-l-3xl"
                                    >
                                        Rent now
                                    </Button>
                                </DialogTrigger>
                                <DialogContent>
                                    {isLogged === null && <Loading />}
                                    {isLogged === true && (
                                        <ul className="w-full m-auto flex flex-col sm:flex-row flex-wrap justify-center items-center gap-4   p-5 rounded-lg ">
                                            {/* <li>
                                            <Select
                                                onValueChange={(value) =>
                                                    setVehicleType(value)
                                                }
                                                className="outline-none border-none "
                                            >
                                                <SelectTrigger className="w-full min-w-[200px] bg-[#1b1b1b] outline-none">
                                                    <SelectValue placeholder="choose car type" />
                                                </SelectTrigger>
                                                <SelectContent>
                                                    <SelectGroup>
                                                        <SelectLabel>
                                                            choose car type
                                                        </SelectLabel>
                                                        {carTypes?.map(
                                                            (
                                                                carType,
                                                                index
                                                            ) => (
                                                                <SelectItem
                                                                    onClick={() => {
                                                                        // setVehicleType(
                                                                        //     carType
                                                                        // )
                                                                        console.log(
                                                                            carType
                                                                        );
                                                                    }}
                                                                    key={index}
                                                                    value={
                                                                        carType
                                                                    }
                                                                >
                                                                    {carType}
                                                                </SelectItem>
                                                            )
                                                        )}
                                                    </SelectGroup>
                                                </SelectContent>
                                            </Select>
                                        </li> */}
                                            <li>
                                                <Select
                                                    onValueChange={(value) =>
                                                        setPickUpLocationSelected(
                                                            value
                                                        )
                                                    }
                                                    className="outline-none border-none"
                                                >
                                                    <SelectTrigger className="w-full min-w-[200px] bg-[#1b1b1b] outline-none">
                                                        <SelectValue placeholder="Pick Up Location" />
                                                    </SelectTrigger>
                                                    <SelectContent>
                                                        <SelectGroup>
                                                            <SelectLabel>
                                                                Pick Up Location
                                                            </SelectLabel>
                                                            {pickUpLocation?.map(
                                                                (
                                                                    carType,
                                                                    index
                                                                ) => (
                                                                    <SelectItem
                                                                        key={
                                                                            index
                                                                        }
                                                                        value={
                                                                            carType
                                                                        }
                                                                    >
                                                                        {
                                                                            carType
                                                                        }
                                                                    </SelectItem>
                                                                )
                                                            )}
                                                        </SelectGroup>
                                                    </SelectContent>
                                                </Select>
                                            </li>

                                            <li>
                                                <Select
                                                    onValueChange={(value) =>
                                                        setDropOffLocationSelected(
                                                            value
                                                        )
                                                    }
                                                    className="outline-none border-none"
                                                >
                                                    <SelectTrigger className="w-full min-w-[200px] bg-[#1b1b1b] outline-none">
                                                        <SelectValue placeholder="Drop Off Location" />
                                                    </SelectTrigger>
                                                    <SelectContent>
                                                        <SelectGroup>
                                                            <SelectLabel>
                                                                Drop Off
                                                                Location
                                                            </SelectLabel>
                                                            {dropOffLocation?.map(
                                                                (
                                                                    carType,
                                                                    index
                                                                ) => (
                                                                    <SelectItem
                                                                        key={
                                                                            index
                                                                        }
                                                                        value={
                                                                            carType
                                                                        }
                                                                    >
                                                                        {
                                                                            carType
                                                                        }
                                                                    </SelectItem>
                                                                )
                                                            )}
                                                        </SelectGroup>
                                                    </SelectContent>
                                                </Select>
                                            </li>
                                            <li>
                                                <Popover>
                                                    <PopoverTrigger asChild>
                                                        <Button
                                                            className={cn(
                                                                "w-full min-w-[200px] bg-transparent border hover:bg-transparent justify-start text-left text-white font-normal"
                                                            )}
                                                        >
                                                            <CalendarIcon className="mr-2 h-4 w-4" />
                                                            {pickUpDate ? (
                                                                format(
                                                                    pickUpDate,
                                                                    "PPP"
                                                                )
                                                            ) : (
                                                                <span>
                                                                    Pick Up date
                                                                </span>
                                                            )}
                                                        </Button>
                                                    </PopoverTrigger>
                                                    <PopoverContent className="w-auto p-0">
                                                        <Calendar
                                                            mode="single"
                                                            selected={
                                                                pickUpDate
                                                            }
                                                            onSelect={
                                                                setPickUpDate
                                                            }
                                                            initialFocus
                                                        />
                                                    </PopoverContent>
                                                </Popover>
                                            </li>
                                            <li>
                                                <Popover>
                                                    <PopoverTrigger asChild>
                                                        <Button
                                                            className={cn(
                                                                "w-full min-w-[200px] bg-transparent border hover:bg-transparent justify-start text-left  text-white font-normal"
                                                            )}
                                                        >
                                                            <CalendarIcon className="mr-2 h-4 w-4" />
                                                            {returnDate ? (
                                                                format(
                                                                    returnDate,
                                                                    "PPP"
                                                                )
                                                            ) : (
                                                                <span>
                                                                    Return Date
                                                                </span>
                                                            )}
                                                        </Button>
                                                    </PopoverTrigger>
                                                    <PopoverContent className="w-auto p-0">
                                                        <Calendar
                                                            mode="single"
                                                            selected={
                                                                returnDate
                                                            }
                                                            onSelect={
                                                                setReturnDate
                                                            }
                                                            initialFocus
                                                        />
                                                    </PopoverContent>
                                                </Popover>
                                            </li>
                                            <li>
                                                <Button
                                                    onClick={handleBooking}
                                                    size="lg"
                                                    className="bg-[#f5B754] min-w-[200px] my-3 hover:bg-white text-black rounded-full "
                                                >
                                                    Rent Now
                                                </Button>
                                            </li>
                                        </ul>
                                    )}
                                    {isLogged === false && (
                                        <div className=" text-lg flex  py-4 flex-col justify-center items-center gap-4">
                                            <p>
                                                if want to rental car you need
                                                to have an authenticated
                                            </p>
                                            <Link to="/login">
                                                <Button
                                                    size="lg"
                                                    className="bg-[#f5B754] w-[130px] my-2 hover:bg-white text-black   rounded-3xl"
                                                >
                                                    login now !
                                                </Button>
                                            </Link>
                                        </div>
                                    )}
                                </DialogContent>
                            </Dialog>

                            <Button
                                size="lg"
                                className="bg-[#f5B754] min-w-[110px] my-2 hover:bg-white text-black  rounded-none rounded-r-3xl"
                            >
                                Whatsapp
                            </Button>
                            <span className=" absolute top-[18px] bg-[#20195a] text-center w-6 h-6 rounded-full">
                                &
                            </span>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    );
}
